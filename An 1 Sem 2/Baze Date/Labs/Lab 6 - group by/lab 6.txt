16. Sa se afiseze codul, numele departamentului si numarul de angajati care
lucreaza in acel departament pentru:

a) departamentele in care lucreaza mai putin de 4 angajati;

SELECT e.department_id, d.department_name, COUNT(*)
FROM employees e JOIN departments d ON (d.department_id = e.department_id )
GROUP BY e.department_id, d.department_name
HAVING COUNT(*)<4; 

--dorim sa afisam si departamentele care nu au angajati

SELECT d.department_id, d.department_name, COUNT(employee_id)
FROM employees e RIGHT JOIN departments d ON (d.department_id = e.department_id )
GROUP BY d.department_id, d.department_name
HAVING COUNT(employee_id)<4;

--sau 

SELECT e.department_id, d. department_name, COUNT(*)
 FROM departments d JOIN employees e ON (d.department_id = e.department_id )
 WHERE e.department_id IN ( SELECT department_id
                            FROM employees
                            GROUP BY department_id
                            HAVING COUNT(*) < 4)
GROUP BY e.department_id, d.department_name; 

b) departamentul care are numarul maxim de angajati.

SELECT e.department_id, d.department_name, COUNT(employee_id)
FROM employees e JOIN departments d ON (d.department_id = e.department_id )
GROUP BY e.department_id, d.department_name
HAVING COUNT(employee_id)= (SELECT MAX(COUNT(employee_id))
                            FROM employees
                            GROUP BY department_id);

17. Sa se afiseze salariatii care au fost angajati în aceeaşi zi a lunii în care cei mai
multi dintre salariati au fost angajati.


SELECT MAX(COUNT(employee_id))
FROM employees 
GROUP BY to_char(hire_date,'dd');

SELECT to_char(hire_date,'dd')
FROM employees 
GROUP BY to_char(hire_date,'dd')
HAVING COUNT(employee_id) = (SELECT MAX(COUNT(employee_id))
                             FROM employees 
                             GROUP BY to_char(hire_date,'dd')
                             );

SELECT last_name, hire_date
FROM EMPLOYEES 
WHERE to_char(hire_date,'dd') = (SELECT to_char(hire_date,'dd')
                                 FROM employees 
                                 GROUP BY to_char(hire_date,'dd')
                                 HAVING COUNT(employee_id) = (SELECT MAX(COUNT(employee_id))
                                                              FROM employees 
                                                              GROUP BY to_char(hire_date,'dd')
                                                             )
                                );

18. Să se obţină numărul departamentelor care au cel puţin 15 angajaţi.

SELECT COUNT(UNIQUE(department_id))
FROM employees
WHERE department_id in(SELECT department_id
       FROM employees
       HAVING COUNT(employee_id) >= 15
       GROUP BY department_id);

--sau

SELECT count(count(department_id)) "Nr. departamente"
FROM employees
GROUP BY department_id
HAVING count(employee_id) >= 15;

19. Să se obţină codul departamentelor şi suma salariilor angajaţilor care lucrează în
acestea, în ordine crescătoare. Se consideră departamentele care au mai mult de
10 angajaţi şi al căror cod este diferit de 30.


SELECT department_id, sum(salary)
FROM employees
WHERE department_id != 30
GROUP BY department_id
HAVING count(employee_id) > 10
ORDER BY 2;

20. Care sunt angajatii care au mai avut cel putin doua joburi?

SELECT employee_id, count(job_id)
FROM job_history
GROUP BY employee_id
HAVING count(job_id) >= 2;


21. Să se calculeze comisionul mediu din firmă, luând în considerare toate liniile din
tabel.

SELECT AVG(NVL(commission_pct, 0))
FROM employees;

O altă variantă este dată de o cerere de forma:

SELECT SUM(commission_pct)/COUNT(*)
FROM employees;


22. Scrieţi o cerere pentru a afişa job-ul, salariul total pentru job-ul respectiv pe
departamente si salariul total pentru job-ul respectiv pe departamentele 30, 50, 80.
Se vor eticheta coloanele corespunzător. Rezultatul va apărea sub forma de mai jos:

SELECT job_id, SUM(DECODE(department_id, 30, salary)) Dep30,
 SUM(DECODE(department_id, 50, salary)) Dep50,
 SUM(DECODE(department_id, 80, salary)) Dep80,
 SUM(salary) Total
FROM employees
GROUP BY job_id;

Metoda 2: (cu subcereri corelate în clauza SELECT)

SELECT job_id, (SELECT SUM(salary)
                FROM employees
                WHERE department_id = 30
                    AND job_id = e.job_id) Dep30,
                (SELECT SUM(salary)
                 FROM employees
                 WHERE department_id = 50
                    AND job_id = e.job_id) Dep50,
                (SELECT SUM(salary)
                 FROM employees
                 WHERE department_id = 80
                 AND job_id = e.job_id) Dep80,
                 SUM(salary) Total
FROM employees e
GROUP BY job_id;

24. Să se afişeze codul, numele departamentului şi suma salariilor pe departamente.

SELECT d.department_id, department_name, sum(salary)
FROM departments d join employees e ON (e.department_id = d.department_id)
GROUP BY d.department_id, department_name;

--subcerere in from

SELECT d.department_id, department_name, a.suma
FROM departments d, (SELECT department_id ,SUM(salary) suma
                     FROM employees
                     GROUP BY department_id) a
WHERE d.department_id = a.department_id;


25. Să se afişeze numele, salariul, codul departamentului si salariul mediu din
departamentul respectiv.

SELECT last_name, salary, department_id, avg(salary)
FROM employees join (SELECT roung(avg(salary)) SalMediu, department_id
                    FROM employees
                    GROUP BY department_id) using department_id
GROUP BY last_name, salary, department_id;

--subcerere in select

SELECT last_name, salary, department_id, (SELECT round(avg(salary))
                                          FROM employees e
                                          WHERE e.department_id = department_id
                                          GROUP BY department_id)
FROM employees e;




























