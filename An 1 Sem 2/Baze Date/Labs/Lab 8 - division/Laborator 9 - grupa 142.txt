--LABORATOR 6

desc projects;

select * from projects;

select * from works_on;

desc works_on;

Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
pentru care s-a alocat un buget egal cu 10000.

select * from projects;

select * from works_on;

--Metoda 1 (utilizând de 2 ori NOT EXISTS):
SELECT DISTINCT employee_id
FROM works_on a
WHERE NOT EXISTS
        (SELECT 1
         FROM project p
         WHERE budget = 10000
         AND NOT EXISTS
                (SELECT 'x'
                 FROM works_on b
                 WHERE p.project_id = b.project_id
                 AND b.employee_id = a.employee_id
                 )
        );
-- la fel ca metoda 4        

--Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
--pentru care s-a alocat un buget egal cu 10000.

select * from projects; --> lista tuturor proiectelor din care se observa 
                  -- ca p2 si p3 sunt proiecte cu buget egal cu 10k

select * from works_on; --> angajati care lucreaza la proiecte
 --> lista angajatilor care lucreaza la TOATE proiectele cu buget egal cu 10k -> 
 --> 145, 101, 148, 200 

--Metoda 2 (simularea diviziunii cu ajutorul funcţiei COUNT):
SELECT employee_id
FROM works_on -- toti angajatii care lucreaza la proiecte
WHERE project_id IN
                (SELECT project_id
                 FROM projects
                 WHERE budget = 10000
                ) -- selectam proiectele cu buget egal cu 10k (p2 si p3)
                -- daca ne oprim cu solutia exercitiului in acest punct
                -- rezulta ca vom afisa angajatii care lucreaza atat la toate proiectele
                -- cu buget de 10k, cat si la o parte din proiectele cu buget de 10k
                -- adica la cel putin un proiect cu buget de 10k
                -- dorim sa afisam doar angajatii care lucreaza la TOATE proiectele care au buget de 10k (p2 SI p3)          
GROUP BY employee_id   -- grupam dupa id-ul angajatului
                      -- deoarece dorim sa numaram pentru fiecare angajat proiectele la care lucreaza
HAVING COUNT(project_id)=(SELECT COUNT(*)
                          FROM projects
                          WHERE budget = 10000
                          ); -- daca nr de proiecte la care lucreaza este egal cu nr de proiecte care au buget de 10k
                          -- => ca angajatul lucreaza la TOATE proiectele cu buget de 10k

/*angajati - lucreaza - proiecte 

proiecte - au - buget

*/

--Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
--pentru care s-a alocat un buget egal cu 10000.

select * from projects; --> lista tuturor proiectelor din care se observa 
                  -- ca p2 si p3 sunt proiecte cu buget egal cu 10k

select * from works_on; --> angajati care lucreaza la proiecte
 --> lista angajatilor care lucreaza la TOATE proiectele cu buget egal cu 10k -> 
 --> 145, 101, 148, 200 
 
--Metoda 3 (operatorul MINUS):
SELECT employee_id
FROM works_on  -- lista tuturor angajatilor care lucreaza la proiecte

MINUS  -- dorim sa eliminam angajatii care lucreaza la proiecte cu buget DIFERIT de 10k
       -- si pe cei care lucreaza doar la o parte din proiectele cu buget EGAL cu 10k
       -- in final dorim sa obtinem angajatii care lucreaza la TOATE proiectele cu buget egal cu 10k

SELECT employee_id from
        ( SELECT employee_id, project_id
          FROM (SELECT DISTINCT employee_id FROM works_on) t1,
               (SELECT project_id FROM project WHERE budget = 10000) t2
               
          MINUS
          
          SELECT employee_id, project_id FROM works_on
        ) t3;


in baza de date avem:
ang 148 lucreaza la p2 si p3 
ang 176 lucreaza doar la p3

t1 -> toti ang care lucreaza la proiecte
t2 -> proiectele cu buget de 10k

produs cartezian intre t1 si t2 -> o sa avem toti angajatii cu toate proiectele cu buget de 10k
-> 148 - p2 / 148 - p3
   176 - p2 / 176 - p3 etc...

din acest produs cartezian elimin proiectele/ angajatii din works_on (cei care lucreaza la proiectele)

obtin -> 148 o sa fie eliminat
         in schimb 176 ramane in rezultat 

t3 -> angajatii care lucreaza doar la o parte din proiectele cu buget de 10k 
   -> sau care lucreaza la proiecte cu buget DIFERIT de 10k


select * from works_on;
--Metoda 4 (A include B => B\A = Ø):
SELECT DISTINCT employee_id
FROM works_on a  -- lista tuturor angajatilor care lucreaza la proiecte
WHERE NOT EXISTS 
    (
        (SELECT project_id
         FROM project p
         WHERE budget = 10000 -- proiectele cu buget de 10k (p2 si p3)
        )
        
        MINUS
        
        (SELECT p.project_id
         FROM project p, works_on b
         WHERE p.project_id = b.project_id
         AND b.employee_id = a.employee_id
        )  -- proiectele la care lucreaza angajatul curent (sincronizare)
        -- obtin o lista cu angajatii care lucreaza la proiecte cu buget diferit de 10k
        -- sau care lucreaza doar la o parte din proiectele cu buget de 10k
    );
    
-> in final obtin exact ang care lucreaza la TOATE proiectele cu buget de 10k
    
    
Exerciţii (DIVISION + alte cereri):
1. Să se listeze informaţii despre angajaţii care au lucrat în TOATE proiectele 
demarate în primele 6 luni ale anului 2006.    
    
select * from works_on;

select * from projects;

select employee_id, last_name, first_name
from employees
where employee_id in (select employee_id
                      from works_on
                      where project_id in (select project_id
                                           from projects
                                           where start_date >= to_date('01-jan-06')
                                                 and start_date <= to_date('30-jun-06')
                                           )
                      group by employee_id -- daca nu grupam si oprim exercitiul in acest punct
                      -- -> o sa afiseze angajatii care lucreaza atat la toate proiectele demarate
                      -- in primele 6 luni, cat si la o parte din ele
                      having count(project_id) = (select count(project_id)
                                                  from projects
                                                  where start_date >= to_date('01-jan-06')
                                                        and start_date <= to_date('30-jun-06')
                                                  ) -- grupam si numaram pentru a verifica 
                                                  -- daca angajatul lucreaza la toate proiectele demarate in 
                                                  -- primele 6 luni 
                       );


2. Să se listeze informaţii despre proiectele la care au participat TOTI 
angajaţii care au deţinut alte 2 posturi în firmă.

select *
from projects
where project_id in (select project_id
                     from works_on -- proiecte la care lucreaza angajatii
                     where employee_id in 
                                (select employee_id
                                 from job_history
                                 group by employee_id
                                 having count(job_id) = 2
                                 )--angajaţii care au deţinut alte 2 posturi în firmă (101, 176, 200)
                    group by project_id -- grupand putem numara cati angajati lucreaza la acelasi proiect
                         -- numarul de angajati care lucreaza la un proiect trebuie sa fie egal 
                         -- cu numarul de ang care au detinut alte doua posturi in firma
                    having count(employee_id) = (select count(count(employee_id))
                                                 from job_history
                                                 group by employee_id
                                                 having count(job_id) = 2
                                                 )
                        
                     )

3. Să se obţină numărul de angajaţi care au avut cel puţin trei job-uri, luându-se în considerare şi job-ul curent.

-- inseamna cel putin doua joburi in job_history
select count(count(employee_id)) NrAng
from job_history
group by employee_id
having count(job_id) >= 2;


4. Pentru fiecare ţară, să se afişeze numărul de angajaţi din cadrul acesteia.

select count(employee_id)
from employees join departments using (department_id)
               join locations using (location_id)
               right join countries using (country_id)
group by country_id;


Tema: laborator 6 - ex: 5, 6, 7
Deadline: 25.04 (sambata - inclusiv)




    