--LABORATOR 6 - continuare
9. Să se afişeze lista angajaţilor care au lucrat NUMAI pe proiecte 
conduse de managerul de proiect având codul 102.

select * from projects; -- managerul 102 conduce doua proiecte -> p1 si p3

select * from works_on;

=> angajatii 136, 140, 150, 162, 176 lucreaza numai pe proiecte conduse de 102

ex: ang 400 - p1 - corect 
    ang 500 - p1 si p3 - corect
    ang 600 - p1 p3 p2 - gresit deoarece nu lucreaza NUMAI pe proiecte conduse de 102
    
select employee_id
from works_on
where project_id IN (select project_id
                     from projects
                     where project_manager = 102)
                     -- angajatii care lucreaza la toate proiectele conduse de 102
                     -- sau doar la o parte din ele
                     -- dar printre acesti angajati pot si angajati care lucreaza si la alte proiecte
                     
MINUS -- din cei de sus eliminam angajatii care lucreaza si la alte proiecte
      -- care nu sunt conduse de 102

select employee_id 
from works_on
where project_id IN (select project_id
                     from projects
                     where project_manager != 102);
                     
                     
10. a) Să se obţină numele angajaţilor care au lucrat CEL PUTIN PE ACELEASI proiecte 
ca şi angajatul având codul 200.                    
                     
select * from works_on; -- ang 200 lucreaza la proiectele p2 si p3
CEL PUTIN - inseamna ca angajatii pot lucra si la alte proiecte care nu ii apartin ang 200
            dar OBLIGATORIU ei trebuie sa lucreze la toate proiectele la care lucreaza ang 200

ex: ang 400 - p2 - gresit 
    ang 500 - p2 p3 - corect
    ang 600 - p1 p2 p3 - corect 

=> in baza noastra de date: 101, 145, 148, (pe 200 il excludem cu ajutorul unei conditii)


select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200)
      and employee_id != 200
group by employee_id, last_name
having count(project_id) = (select count(project_id)
                            from works_on
                            where employee_id = 200);


b) Să se obţină numele angajaţilor care au lucrat CEL MULT pe aceleaşi proiecte 
ca şi angajatul având codul 200.

select * from works_on; -- ang 200 lucreaza la proiectele p2 si p3

CEL MULT - inseamna ca angajatii pot lucra la MACAR un proiect din cele la care lucreaza 200
         - sau la toate, dar nu pot lucra si la alte proiecte la care ang 200 nu lucreaza

=> 101, 145, 148, 150(doar p3), 162(doar p3), 176(doar p3)

ex: ang 400 - p2 - corect
    ang 500 - p2 p3 - corect
    ang 600 - p1 p2 p3 - gresit 

--metoda 1
select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200) -- inseamna ca ang lucreaza ori la toate proiectele la care
                                              -- lucreaza ang 200 ori doar la o parte din ele
      and employee_id != 200
                            
MINUS  -- eliminam angajatii care lucreaza si la alte proiecte la care nu lucreaza ang 200

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on -- lista tuturor proiectelor la care lucreaza angajati
                     
                     MINUS  -- eliminam proiectele la care lucreaza 200
                     
                     select project_id
                     from works_on
                     where employee_id = 200
                     );
                     
--metoda 2
select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200) -- inseamna ca ang lucreaza ori la toate proiectele la care
                                              -- lucreaza ang 200 ori doar la o parte din ele
      and employee_id != 200
                            
MINUS  -- eliminam angajatii care lucreaza si la alte proiecte la care nu lucreaza ang 200

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id not in (select project_id
                         from works_on 
                         where employee_id = 200
                        );
                     
--metoda 3
select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200) -- inseamna ca ang lucreaza ori la toate proiectele la care
                                              -- lucreaza ang 200 ori doar la o parte din ele
      and employee_id != 200
                            
MINUS  -- eliminam angajatii care lucreaza si la alte proiecte la care nu lucreaza ang 200

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select distinct project_id
                     from works_on 
                     where project_id not in (select project_id
                                              from works_on
                                              where employee_id = 200)
        
                    );

--metoda 4

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200) -- inseamna ca ang lucreaza ori la toate proiectele la care
                                              -- lucreaza ang 200 ori doar la o parte din ele
      and employee_id != 200
group by employee_id, last_name
having count(project_id) <= (select count(project_id)
                             from works_on
                             where employee_id = 200
                             )
                            
MINUS  -- eliminam angajatii care lucreaza si la alte proiecte la care nu lucreaza ang 200

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on -- lista tuturor proiectelor la care lucreaza angajati
                     
                     MINUS  -- eliminam proiectele la care lucreaza 200
                     
                     select project_id
                     from works_on
                     where employee_id = 200
                     );

11. Să se obţină angajaţii care au lucrat pe ACELEASI proiecte ca şi angajatul având codul 200.

PE ACELEASI PROIECTE -> EXACT PE ACELEASI PROIECTE -> p2 si p3

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on
                     where employee_id = 200)
      and employee_id != 200
group by employee_id, last_name
having count(project_id) = (select count(project_id)
                            from works_on
                            where employee_id = 200)

MINUS  -- eliminam angajatii care lucreaza si la alte proiecte la care nu lucreaza ang 200

select employee_id, last_name
from employees e join works_on wo using (employee_id)
where project_id in (select project_id
                     from works_on -- lista tuturor proiectelor la care lucreaza angajati
                     
                     MINUS  -- eliminam proiectele la care lucreaza 200
                     
                     select project_id
                     from works_on
                     where employee_id = 200
                     );
                     
select * from works_on;                

--Variabile de substitutie

8. Să se determine departamentele având media salariilor mai mare decât un număr dat.

select department_id, round(avg(salary))
from employees
group by department_id
having avg(salary) > &p;

select department_id, round(avg(salary))
from employees
group by department_id
having avg(salary) > &&p;

undefine p;

--EX1:
define x = &&y; 
select &&x from dual;
define;
undefine y;
select &&x from dual;
undefine x;
select &&x from dual;
undefine x;
select &x from dual;


Sa se afiseze codul, numele, salariul si codul departamentului din care face parte pentru 
un angajat al carui cod este introdus de utilizator de la tastatura. 
Analizati diferentele dintre cele 4 posibilitati prezentate mai jos :
I.
SELECT employee_id, last_name, salary, department_id
FROM employees
WHERE employee_id = &p_cod;

II.
DEFINE p_cod;
SELECT employee_id, last_name, salary, department_id
FROM employees
WHERE employee_id = &p_cod;
UNDEFINE p_cod;

III.
DEFINE p_cod=100;
SELECT employee_id, last_name, salary, department_id
FROM employees
WHERE employee_id = &p_cod;
UNDEFINE p_cod;

IV.
ACCEPT p_cod PROMPT "cod= ";
SELECT employee_id, last_name, salary, department_id
FROM employees
WHERE employee_id = &p_cod;

define;

Sa se afiseze o coloana aleasa de utilizator, dintr-un tabel ales de utilizator, 
ordonand dupa aceeasi coloana care se afiseaza. De asemenea, este obligatorie precizarea unei conditii WHERE.

SELECT &&p_coloana  -- && determina ca valoarea lui p_coloana sa nu mai
                    --fie ceruta si pentru clauza ORDER BY, urmand sa
                    --fie utilizata valoarea introdusa aici pentru toate
                    --aparitiile ulterioare ale lui &p_coloana
FROM &p_tabel
WHERE &p_where
ORDER BY &p_coloana;


ACCEPT data_inceput PROMPT 'Introduceti data de inceput'
ACCEPT data_sfarsit PROMPT 'Introduceti data de sfarsit'
SELECT last_name, job_id, hire_date
FROM employees
WHERE hire_date BETWEEN TO_DATE('&data_inceput', 'mm/dd/yy')
                    AND TO_DATE('&data_sfarsit', 'mm/dd/yy');


define;

               