--1.
a) 2
b) text 2
c) text 3 adaugat in sub-bloc
d) 101
e) text 1 adaugat in blocul principal
f) text 2 adaugat in blocul principal

--2.
--a.

select to_char(z.ziua, 'dd/mm/yyyy') "Ziua" , count(r.book_date) "Nr imprumuturi"
from rental r right join (select trunc(sysdate, 'month') + level -1 ziua
                          from dual
                          connect by level <= extract (day from last_day(sysdate))
                          ) z 
                          on (to_char(r.book_date, 'dd/mm/yyyy') = to_char(z.ziua, 'dd/mm/yyyy'))
group by to_char(z.ziua, 'dd/mm/yyyy')
order by to_char(z.ziua, 'dd/mm/yyyy');

--b.

create table octombrie_ttu (id number, data date);

select * from octombrie_ttu;

declare
    n number := extract (day from last_day(sysdate));
    d date := trunc(sysdate, 'month');
begin
    for i in 1..n loop
        insert into octombrie_ttu 
        values (i, d);
        d := d + 1;
    end loop;
end;
/

--3

DECLARE 
    v_nume member.last_name%TYPE:=&v_nume;
    m_id member.member_id%TYPE;
    nr_filme NUMBER(8);
BEGIN
    select member_id into m_id from member where last_name = v_nume;
    EXCEPTION
        WHEN no_data_found then DBMS_OUTPUT.PUT_LINE('Nu exista un membru cu acest nume!');
        WHEN too_many_rows then DBMS_OUTPUT.PUT_LINE('Exista mai multi membri cu acest nume!');
    END;
    select count(unique(title_id)) into nr_filme
    from rental
    where m.last_name = vnume;
    DBMS_OUTPUT.PUT_LINE('Nr filme: ' || nr_filme);
END;
/

--4

DECLARE 
    v_nume member.last_name%TYPE:=&v_nume;
    m_id member.member_id%TYPE;
    nr_filme NUMBER(8);
BEGIN
    select member_id into m_id from member where last_name = v_nume;
    EXCEPTION
        WHEN no_data_found then DBMS_OUTPUT.PUT_LINE('Nu exista un membru cu acest nume!');
        WHEN too_many_rows then DBMS_OUTPUT.PUT_LINE('Exista mai multi membri cu acest nume!');
    END;
    select count(unique(title_id)) into nr_filme
    from rental
    where m.last_name = vnume;
    DBMS_OUTPUT.PUT_LINE('Nr filme: ' || nr_filme);
    
    select count(*) into nr_total_filme from title;
                
    CASE WHEN nr_filme >= 0.75 * nr_total_filme
            THEN DBMS_OUTPUT.PUT_LINE('A imprumutat peste 75% din filmele existente.');
         WHEN nr_filme >= 0.5 * nr_total_filme
            THEN DBMS_OUTPUT.PUT_LINE('A imprumutat peste 50% din filmele existente.');
         WHEN nr_filme >= 0.25 * nr_total_filme
            THEN DBMS_OUTPUT.PUT_LINE('A imprumutat peste 25% din filmele existente.');
         ELSE DBMS_OUTPUT.PUT_LINE('A imprumutat sub 25% din filmele existente.');
    END CASE;
END;
/

--5

create table member_ttu as (select * from member);

select * from member_ttu;

ALTER TABLE member_ttu
ADD Discount numeric(5,3);

DECLARE 
    m_id member.member_id%TYPE:=&m_id;
    nr_filme NUMBER(8);
    nr_total_filme NUMBER(8);
BEGIN
    select count(*) into nr_total_filme from title;
    
    select count(unique(title_id)) into nr_filme
    from rental
    where m.member_id = m_id;
    
    CASE WHEN nr_filme >= 0.75 * nr_total_filme
            THEN 
                update member_ttu
                set Discount = 0.1
                where member_id = m_id;
                DBMS_OUTPUT.PUT_LINE('Actualizare reusita.');
         WHEN nr_filme >= 0.5 * nr_total_filme
            THEN 
                update member_ttu
                set Discount = 0.05
                where member_id = m_id;
                DBMS_OUTPUT.PUT_LINE('Actualizare reusita.');
         WHEN nr_filme >= 0.25 * nr_total_filme
            THEN 
                update member_ttu
                set Discount = 0.03
                where member_id = m_id;
                DBMS_OUTPUT.PUT_LINE('Actualizare reusita.');
         ELSE DBMS_OUTPUT.PUT_LINE('Nu s-a actualizat nimic.');
    END CASE; 
END;
/