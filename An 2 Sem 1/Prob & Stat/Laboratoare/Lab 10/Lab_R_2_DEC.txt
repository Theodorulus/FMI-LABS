# /*Repartitiile discrete in R
#   # - Bernoulli
    # -Uniforma
    # -Binomiala
    # -Geometrica
    # -poisson
    # -HiperGeometrica
#Operatii - sa generam obs din repartitia corespunzatoare
        # - calculam functia de masa intr-un punct
        # - calmculam functia de repartitie\
        # - calculam functia cuantila (F^-1(u) = inf{x|F(x)>=u}) u apartine [0,1]
#STRUCTURA |prefix|radical| radical=binom/geom/pois/hyper 
                          # prefixul = r-random(generarea de observatii din repartitia data de radical)
                                      #d- density (fct de masa)
                                      #p - probability (fct de repartitie)
                                      #q - quantile (fct cunatina F^-1)
          #rbinom(p, ....-(param rep radical))
#uniforma pe o multime finita
x= sample(1:15,10000, replace = TRUE)
x_f = table(x)/10000
x_t = rep(1/15,15)


# face un graph xOy
barplot(x_f, 
        names.arg = 1:15,
        horiz=TRUE)

#compara xf cu xt cu pare suprapuse #nu prea se foloseste asa 
barplot(rbind(x_f,x_t))


barplot(rbind(x_f,x_t),
        beside = TRUE,
        ylim= c(0,0.1),
        legend.text =c("Rep. Empirica", "Rep. Teoretia"),
        args.legend = list(x=35, y= 0.1, bty="n")
        )
#prob empirica
sum(x<3.5)/length(x)
#prob teoretica
1/5
#BINOMIALA
x=rbinom(1000000,10, 0.3)
x_emp=table(x)/length(x)
x_teor=dbinom(0:10, 10, 0.3)

sum(dbinom(9:10,10,0.3))
1-pbinom(8,10,0.3)


barplot(rbind(x_emp,x_teor),
        beside = TRUE,
        col= c("red","blue"),
        legend.text =c("Rep. Empirica", "Rep. Teoretia"),
        args.legend = list(x="topright", bty="n")
)
#GEOMETRICA
x=rgeom(1000000,0.3)
x_1=table(x)/length(x)
val_x=as.numeric(names(x_1))
x_2=dgeom(val_x,0.3)

barplot(rbind(x_1,x_2),
        beside = TRUE,
        col= c("red","blue"),
        legend.text =c("Rep. Empirica", "Rep. Teoretia"),
        args.legend = list(x="topright", bty="n")
)

#POISSON
x=rpois(1000000,2)
x_1=table(x)/length(x)
val_x=as.numeric(names(x_1))
x_2=dpois(val_x,2)

barplot(rbind(x_1,x_2),
        beside = TRUE,
        col= c("red","blue"),
        legend.text =c("Rep. Empirica", "Rep. Teoretia"),
        args.legend = list(x="topright", bty="n")
)



#-------------------------
gen_va_discrate = function(n=1, x , p){
  out = rep(0,n)
  
  
  ind=order(p, decreasing = TRUE)
  pOrd= p[ind]
  xOrd= x[ind]
  
  
  cs = cumsum(pOrd)
  
  for( i in 1:n)
  {
    u = runif(1)
    
      #u <= cs 
    k=min(which(u<=cs))
    out[i]=xOrd[k]
    
    }
  return(out)
  
  
}




#uniforma pe o multime finita 
x= gen_va_discrate(100000, x=1:10, p=dbinom(0:10, 10, 0.3))
x_emp=table(x)/length(x)
val_x=as.numeric(names(x_emp))
x_teor=dbinom(val_x,10,0.3)

barplot(rbind(x_emp,x_teor),
        beside = TRUE,
        col= c("red","blue"),
        legend.text =c("Rep. Empirica", "Rep. Teoretia"),
        args.legend = list(x="topright", bty="n")
)
